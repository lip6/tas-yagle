
           inf_DefineFalseSlack   [<restriction>:]   <{startclock}>  [{<start-
       clock_dir>}]     <{startnode}>     [{<startnode_dir>}]      <{endnode}>
       [{<endnode_dir>}] [{<endnode_hz_state>}] <{endclock}> ;

DDEESSCCRRIIPPTTIIOONN
       Defines a slack as being invalid.

AARRGGUUMMEENNTTSS
       rreessttrriiccttiioonn   a  '-'  separated  list  of checks/signal types. Possible
                     values: _s_e_t_u_p, _h_o_l_d, _l_a_t_c_h, _p_r_e_c_h. _l_a_t_c_h and _p_r_e_c_h define
                     _e_n_d_n_o_d_e signal type. Default is "setup-hold".

       ssttaarrttcclloocckk    name of the clock generating the _s_t_a_r_t_n_o_d_e data

       ssttaarrttcclloocckk__ddiirr
                     transition  of  _s_t_a_r_t_c_l_o_c_k  :  <up>,  <down>,  <rise>  or
                     <fall>. Default is both.

       ssttaarrttnnooddee     name of the generated data node

       ssttaarrttnnooddee__ddiirr transition of _s_t_a_r_t_n_o_d_e : <up>, <down>, <rise> or <fall>.
                     Default is both.

       eennddnnooddee       name of the data arrival node

       eennddnnooddee__ddiirr   transition  of _e_n_d_n_o_d_e_s_t_a_r_t_n_o_d_e : <up>, <down>, <rise> or
                     <fall>. Default is both.

       eennddnnooddee__hhzz__ssttaattee
                     specify whether the end node transition goes to hz  state
                     or not: <hz> or <nothz>. Default is both.

       eennddcclloocckk      name of the clock controlling the arrival node

       EEXXAAMMPPLLEE       _i_n_f___D_e_f_i_n_e_F_a_l_s_e_S_l_a_c_k  _s_e_t_u_p_:  _"_c_k_"  _<_r_i_s_e_>  _"_d_a_t_a_" _<_r_i_s_e_>
                     _"_a_r_r_i_v_a_l_" _"_c_k_2_".

