<?xml version="1.0" encoding="ISO-8859-1" ?>
<chapter>
<section niv='1'><title>&tool; in the validation flow</title>
<section niv='2'><title>Structural validation</title>


<p>The structural validation performed by &tool; is based upon the 
recognition of user-defined structural rules. These rules are in fact VHDL structural 
descriptions of elements of the RAM. The validation is then performed by finding 
occurencies of these structural descriptions in the transistor netlist.</p>

<p>The rules may be either transistor-level rules or hierarchical rules. 
&tool; looks first for occurencies of transistor-level rules, then 
for higher-level hierarchical rules, instantiating already recognized transistor level 
rules, or lower-level hierarchical rules. The number of hierarchical levels is not limited.</p>


</section>
<section niv='2'><title>Functional validation</title>


<p>The functional validation is performed by generating the behavioral VHDL of 
the entire Random Access Memory. This VHDL is generated by two means:</p>

<p>When a behavioral VHDL is associated with a structural rule, each occurence 
in the transistor netlist, of the pattern matching the structural rule, is replaced by the behavioral VHDL.</p>

<p>When all the rules have been applied, &tool; generates automatically 
a behavioral VHDL for the transistors which remain unmatched.</p>

<p>The generated VHDL may then be either flat or hierarchical. The VHDL is flat 
when all the transistors have been matched by a rule, and when a behavioral description 
has been associated with the highest-level structural rule. The VHDL is hierarchical when 
some transistors have not been matched. In this case, a top-level structural VHDL, 
instantiating the automatically generated behavioral VHDL, and the behavioral VHDLs associated with 
the structural rules, is created.</p>

</section>
<section niv='2'><title>Validation strategy for the generated RAMs</title>


<p>As stated in chapter 2, a RAM is constituted of two banks connected together with buffers, 
and of a decoder cell. The two banks, together with the buffers, form what we call the matrix. 
We propose here to perform the structural validation of the matrix, 
and the functional validation of the entire RAM.</p>

<p>In order to perform the structural validation of the matrix, 
we will write a set of rules describing the hierarchy of a block formed of the two banks, and of the buffers
connecting them together.</p>

<p>In order to perform the functional validation, we will associate a behavioral description 
with the top-level rule of this hierarchy. The remaining transistors - the transistors 
of the decoder - will be automatically treated by &tool;, which will generate a behavioral VHDL. 
A structural hierarchical VHDL, which instantiates the matrix VHDL and the decoder VHDL, will be finally created.</p>

<p>The following diagram illustrates the generation of the behavioral VHDL of the entire RAM.</p>


<imgsize namehtml="genius_flow.gif" namepdf="genius_flow.gif" hpdf="322pt" wpdf="420pt" />
</section>
</section></chapter>
